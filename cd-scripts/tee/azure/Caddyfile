#
#  global block =>
#    email is for acme
# # # #

{
  key_type p256
  email mac@pse.dev # for acme
  servers {
    metrics
  }
  log {
    output stdout
    format console {
      time_format common_log
      time_local
    }
    level DEBUG
  }
}

#
#    server block, acme turned on (default when using dns)
#    reverse proxy with fail_duration + lb will try upstreams sequentially (fallback)
#    e.g. => `reverse_proxy :4000 :5000 10.10.10.10:1000 tlsnotary.org:443`
#    will always deliver to :4000 if its up, but if :4000 is down for more than 4s it trys the next one
# # # #

notary.codes {
    handle_path /v0.1.0-alpha.8* {
        reverse_proxy :4003 :3333 {
            lb_try_duration 4s
            fail_duration 10s
            lb_policy header X-Upstream {
                fallback first
            }
        }
    }
    handle_path /v0.1.0-alpha.7* {
        reverse_proxy :4002 :3333 {
            lb_try_duration 4s
            fail_duration 10s
            lb_policy header X-Upstream {
                fallback first
            }
        }
    }
    handle_path /v0.1.0-alpha.6* {
        reverse_proxy :4001 :3333 {
            lb_try_duration 4s
            fail_duration 10s
            lb_policy header X-Upstream {
                fallback first
            }
        }
    }

    handle_path /nightly* {
     reverse_proxy :3333 {
     lb_try_duration 4s
     fail_duration 10s
     lb_policy header X-Upstream {
       fallback first
      }
     }
    }

    handle_path /proxy* {
     reverse_proxy :55688 proxy.notary.codes:443 {
     lb_try_duration 4s
     fail_duration 10s
     lb_policy header X-Upstream {
       fallback first
      }
     }
    }

    handle  {
     root * /srv
     file_server
    }

    handle_errors {
        @404 {
            expression {http.error.status_code} == 404
        }
        rewrite @404 /index.html
        file_server
    }
}

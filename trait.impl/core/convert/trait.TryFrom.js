(function() {
    var implementors = Object.fromEntries([["tlsn_core",[["impl TryFrom&lt;&amp;str&gt; for <a class=\"struct\" href=\"tlsn_core/connection/struct.DnsName.html\" title=\"struct tlsn_core::connection::DnsName\">DnsName</a>"],["impl TryFrom&lt;ProtocolVersion&gt; for <a class=\"enum\" href=\"tlsn_core/connection/enum.TlsVersion.html\" title=\"enum tlsn_core::connection::TlsVersion\">TlsVersion</a>"],["impl TryFrom&lt;PublicKey&gt; for <a class=\"struct\" href=\"tlsn_core/connection/struct.ServerEphemKey.html\" title=\"struct tlsn_core::connection::ServerEphemKey\">ServerEphemKey</a>"],["impl TryFrom&lt;String&gt; for <a class=\"struct\" href=\"tlsn_core/connection/struct.DnsName.html\" title=\"struct tlsn_core::connection::DnsName\">DnsName</a>"],["impl TryFrom&lt;Vec&lt;u8&gt;&gt; for <a class=\"struct\" href=\"tlsn_core/hash/struct.Hash.html\" title=\"struct tlsn_core::hash::Hash\">Hash</a>"]]],["tlsn_wasm",[["impl TryFrom&lt;<a class=\"struct\" href=\"tlsn_wasm/prover/struct.ProverConfig.html\" title=\"struct tlsn_wasm::prover::ProverConfig\">ProverConfig</a>&gt; for <a class=\"struct\" href=\"tlsn/prover/config/struct.ProverConfig.html\" title=\"struct tlsn::prover::config::ProverConfig\">ProverConfig</a>"],["impl TryFrom&lt;<a class=\"struct\" href=\"tlsn_wasm/types/struct.HttpRequest.html\" title=\"struct tlsn_wasm::types::HttpRequest\">HttpRequest</a>&gt; for Request&lt;Full&lt;Bytes&gt;&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[864,516]}
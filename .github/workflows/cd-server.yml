name: Deploy server
on:
  push:
    branches:
      - dev
    tags:
      - "[v]?[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: true
        default: "enable"
        type: choice
        options:
        - nightly
        - stable

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:  
  deploy:
    runs-on: ubuntu-latest
    env:
      DATA_ENV: ${{ github.event.inputs.environment || 'nightly' }}
    permissions:
      id-token: write
      contents: read
    
    steps:      
      - name: Wait for test workflow to succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          # Have to be specify '(notary-server)', as we are using matrix for build_and_test job in ci.yml, else it will fail, more details [here](https://github.com/lewagon/wait-on-check-action#check-name)
          check-name: 'Build and test (notary-server)'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          # How frequent (in seconds) this job will call GitHub API to check the status of the job specified at 'check-name'
          wait-interval: 60

      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::490752553772:role/tlsn-deploy-slc
          role-duration-seconds: 1800
          aws-region: eu-central-1

      - name: Install stable rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Use caching
        uses: Swatinem/rust-cache@v2.5.0
        with:
          workspaces: ${{ matrix.package }} -> target

      - name: Cargo build
        run: |
          .github/scripts/build-server.sh ${{ env.DATA_ENV }}

      - name: Trigger Deployment
        run: |
          .github/scripts/deploy-server.sh ${{ env.DATA_ENV }} $GITHUB_REF_NAME

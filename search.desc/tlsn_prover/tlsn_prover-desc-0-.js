searchState.loadedDescShard("tlsn_prover", 0, "TLSNotary prover library.\nA prover instance.\nConfiguration for the prover\nBuilder for <code>ProverConfig</code>.\nError type for ProverConfigBuilder\nA controller for the prover.\nError for <code>Prover</code>.\nProver future which must be polled for the TLS connection …\nUninitialized field\nCustom validation error\nBuilds a new <code>ProverConfig</code>.\nCreate a new builder for <code>ProverConfig</code>.\nConnects to the server using the provided socket.\nReturns a controller for the prover for advanced …\nReturns the crypto provider.\nCryptography provider.\nDefers decryption of data from the server until the server …\nFinalizes the notarization.\nFinalizes the proving.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new prover.\nReturns the protocol configuration.\nProtocol configuration to be checked with the verifier.\nProves subsequences in the transcript to the verifier.\nReturns the server DNS name.\nThe server DNS name.\nSets up the prover.\nStarts notarization of the TLS session.\nStarts proving the TLS session.\nTLS prover states.\nReturns the transcript.\nReturns the transcript.\nReturns the transcript.\nConfigures transcript commitments.\nState after the TLS connection has been closed.\nEntry state\nNotarizing state.\nProving state.\nState after MPC setup has completed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")
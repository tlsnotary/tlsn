// Test data for key exchange was generated by recording the TCP dump:
// 
tcpdump 'tcp port 4433' -i lo -w out.pcap
// 
// running a TLS server with certificates containing an RSA or an ECDSA pubkey:
// 
openssl s_server -port 4433 -tls1_2 -cert testdata/key_exchange/rsa/cert_rsa.der -certform der -key testdata/key_exchange/rsa/cert_rsa.key
openssl s_server -port 4433 -tls1_2 -cert testdata/key_exchange/ecdsa/cert_ecdsa.der -certform der -key testdata/key_exchange/ecdsa/cert_ecdsa.key 
// 
// connecting with a TLS client (depending on the server pubkey type):
// 
openssl s_client -tls1_2 -curves prime256v1 -sigalgs "RSA+SHA256" -connect localhost:4433
openssl s_client -tls1_2 -curves prime256v1 -sigalgs "ECDSA+SHA256" -connect localhost:4433
 

// TLS fields were parsed out as hex strings from the resulting TCP dump:
// 
// client_random
tshark -r out.pcap -Y "tcp.dstport == 4433" -T fields -e tls.handshake.random 
// server_random
tshark -r out.pcap -Y "tcp.srcport == 4433" -T fields -e tls.handshake.random
// ephemeral public key
tshark -r out.pcap -Y "tcp.srcport == 4433" -T fields -e tls.handshake.server_point
// signature over key exchange parameters
tshark -r out.pcap -Y "tcp.srcport == 4433" -T fields -e tls.handshake.sig




